<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>