<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>